apply plugin: 'groovy'

dependencies {
	compile localGroovy()
	compile project(':trainbenchmark-generator')
	compile project(':trainbenchmark-generator-emf')
	compile project(':trainbenchmark-generator-graph-neo4j')
	compile project(':trainbenchmark-generator-graph-tinkerpop')
	compile project(':trainbenchmark-generator-rdf')
	compile project(':trainbenchmark-generator-sql')
	compile project(':trainbenchmark-generator-rdf')
	compile project(':trainbenchmark-tool')
	compile project(':trainbenchmark-tool-blazegraph')
	compile project(':trainbenchmark-tool-drools')
	compile project(':trainbenchmark-tool-eclipseocl')
	compile project(':trainbenchmark-tool-emfapi')
//	compile project(':trainbenchmark-tool-epsilon')
//	compile project(':trainbenchmark-tool-iqdcore')
	compile project(':trainbenchmark-tool-ingraph')
	compile project(':trainbenchmark-tool-jena')
	compile project(':trainbenchmark-tool-mysql')
	compile project(':trainbenchmark-tool-neo4j')
	compile project(':trainbenchmark-tool-rdf4j')
	compile project(':trainbenchmark-tool-sqlite')
	compile project(':trainbenchmark-tool-tinkergraph')
	compile project(':trainbenchmark-tool-viatra')
}

sourceSets {
	main {
		groovy { srcDirs = ['src']}
	}
}

/**
 * Initialize the generator, benchmark, etc. scripts in src directory,
 * based on the template script in the src-template directory.
 */
task initScripts(type: Copy) {
	from 'src-template'
	into 'src'
	include '*.groovy'
}

/**
 * Save the current scripts from the src directory to the src-template directory.
 * Use with caution and double check the diffs before committing the changes.
 */
task saveScripts(type: Copy) {
	from 'src'
	into 'src-template'
	include '*.groovy'
}

task cleanResults(type: Delete) {
	delete fileTree(dir: '../results', include: '*.csv')
}

task benchmark(dependsOn: 'classes', type: JavaExec) {
	main = 'BenchmarkScript'
	classpath = sourceSets.main.runtimeClasspath
}

task generate(dependsOn: 'classes', type: JavaExec) {
	main = 'GeneratorScript'
	classpath = sourceSets.main.runtimeClasspath
}

task memory(dependsOn: 'classes', type: JavaExec) {
	main = 'MemoryScript'
	classpath = sourceSets.main.runtimeClasspath
}

task qpt(dependsOn: 'classes', type: JavaExec) {
	main = 'QueryPlanTester'
	classpath = sourceSets.main.runtimeClasspath
}
